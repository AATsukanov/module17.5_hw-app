Здравствуйте!
Хорошее решение, но есть ряд недочетов которые нужно исправить:

1. tasks = db.scalars(select(Task)).all()
if tasks is None:
tasks не может здесь быть None ибо метод .all() вернет либо список задач либо пустой список если их нету.

2. async def task_by_id(db: Annotated[Session, Depends(get_db)], task_id: str):
task = db.scalars(select(Task).where(Task.id == task_id))
if task is None:
Неправильная проверка на существование задачи ибо
метод .scalars() сам по себе возвращает объект генератор,
для получение одних данных и чтобы ваша проверка работала стоит использовать .scalar()

3. Так же вы не выполнили один из пунктов задачи:
Дополните функцию delete_user так, чтобы вместе с пользователем удалялись все записи связанные с ним.